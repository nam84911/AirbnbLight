{"version":3,"sources":["src/app/places/discover/discover.page.html","src/app/places/discover/discover-routing.module.ts","src/app/places/discover/discover.module.ts","src/app/places/discover/discover.page.scss","src/app/places/discover/discover.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,+jEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,2CAAA,CAAA,cAAA;AAFb,KADqB,EAKrB;AACE,MAAA,IAAI,EAAE,cADR;AAEE,MAAA,YAAY,EAAE;AAAA,eAAM,OAAA,CAAA,GAAA;AAAA;AAAA,SAAA,mBAAA,CAAA,CAAA,CAAA,+GAAA,CAAA,EAAA,mBAAA,CAAA,CAAA,CAAA,oFAAA,CAAA,CAAA,EAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,IAAA;AAAA;AAAA,uEAAA,CAAA,EAA6C,IAA7C,CAAmD,UAAA,CAAC;AAAA,iBAAI,CAAC,CAAC,qBAAN;AAAA,SAApD,CAAN;AAAA;AAFhB,KALqB,CAAvB;;AAeA,QAAa,yBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,yBAAyB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJrC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIqC,CAAA,EAAzB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAa,kBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAT9B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,qDAAA,CAAA,2BAAA,CAJO,CADD;AAOR,MAAA,YAAY,EAAE,CAAC,2CAAA,CAAA,cAAA,CAAD;AAPN,KAAT,CAS8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACnBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,YAAb;AAME,4BAAoB,YAApB,EAAsD,WAAtD,EAA6E;AAAA;;AAAzD,aAAA,YAAA,GAAA,YAAA;AAAkC,aAAA,WAAA,GAAA,WAAA;AAFrD,aAAA,SAAA,GAAU,IAAV;AAEiF;;AANpF;AAAA;AAAA,2CAOkB;AAAA;;AACd,cAAG,KAAK,OAAL,CAAa,KAAb,IAAoB,KAAvB,EAA6B;AAC3B,iBAAK,MAAL,GAAY,KAAK,SAAjB;AACD,WAFD,MAEM,IAAG,KAAK,OAAL,CAAa,KAAb,IAAoB,UAAvB,EAAkC;AACtC,iBAAK,MAAL,GAAY,KAAK,SAAL,CAAe,MAAf,CAAsB,UAAA,CAAC;AAAA,qBAAE,CAAC,CAAC,MAAF,IAAU,KAAI,CAAC,WAAL,CAAiB,MAA7B;AAAA,aAAvB,CAAZ;AACD;;AACD,eAAK,YAAL,CAAkB,SAAlB,GAA8B,SAA9B,CAAwC,YAAI;AAC1C,YAAA,KAAI,CAAC,SAAL,GAAe,KAAf;AACD,WAFD;AAGD;AAhBH;AAAA;AAAA,mCAiBU;AAAA;;AACN,eAAK,kBAAL,GAAwB,KAAK,YAAL,CAAkB,MAAlB,CAAyB,SAAzB,CAAmC,UAAA,MAAM,EAAE;AACjE,YAAA,MAAI,CAAC,SAAL,GAAe,MAAf;AACA,YAAA,MAAI,CAAC,MAAL,GAAY,MAAI,CAAC,SAAjB;AACD,WAHuB,CAAxB;AAID;AAtBH;AAAA;AAAA,iCAuBW,KAvBX,EAuBsD;AAAA;;AAClD,cAAG,KAAK,CAAC,MAAN,CAAa,KAAb,IAAoB,KAAvB,EAA6B;AAC3B,iBAAK,MAAL,GAAY,KAAK,SAAjB;AACD,WAFD,MAEM,IAAG,KAAK,CAAC,MAAN,CAAa,KAAb,IAAoB,UAAvB,EAAkC;AACtC,iBAAK,MAAL,GAAY,KAAK,SAAL,CAAe,MAAf,CAAsB,UAAA,CAAC;AAAA,qBAAE,CAAC,CAAC,MAAF,IAAU,MAAI,CAAC,WAAL,CAAiB,MAA7B;AAAA,aAAvB,CAAZ;AACD;AAEF;AA9BH;AAAA;AAAA,sCA+Ba;AACT,cAAG,KAAK,kBAAR,EAA2B;AACzB,iBAAK,kBAAL,CAAwB,WAAxB;AACL;AACE;AAnCH;;AAAA;AAAA,OAAA;;;;cAMmC,2CAAA,CAAA,cAAA;;cAAiC,sDAAA,CAAA,aAAA;;;;AAL9B,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,SAAV,EAAoB;AAAC,gBAAO;AAAR,KAApB,CAAmC,E,gEAAQ,2CAAA,CAAA,YAAA,C,CAAR,CAAA,E,sBAAA,E,SAAA,E,KAAkB,CAAlB;AADzB,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALxB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0FAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKwB,E,uEAMU,2CAAA,CAAA,cAAA,C,EAAiC,sDAAA,CAAA,aAAA,C,EAN3C,CAAA,EAAZ,YAAY,CAAZ","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-button fill=\\\"clear\\\"color=\\\"primary\\\"  slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"first\\\"></ion-menu-button>\\n    </ion-button>\\n    <ion-title>discover</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-segment value=\\\"all\\\" (ionChange)=\\\"onChange($event)\\\" #segment>\\n    <ion-segment-button value=\\\"all\\\">All places</ion-segment-button>\\n    <ion-segment-button value=\\\"bookable\\\">Bookable</ion-segment-button>\\n  </ion-segment>\\n  <div class=\\\"ion-text-center\\\" *ngIf=\\\"isLoading\\\">\\n    <ion-spinner ></ion-spinner>\\n  </div>\\n    <ion-row *ngIf=\\\"places.length>0\\\">\\n      <ion-col  text-center> \\n          <ion-card size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"ion-text-center\\\">\\n            <ion-card-header>\\n              <ion-card-title class=\\\"ion-text-center\\\">\\n                {{places[0].description}}\\n              </ion-card-title>\\n              <ion-card-subtitle>\\n                {{places[0].price | currency}}/night\\n              </ion-card-subtitle>\\n            </ion-card-header>\\n            <ion-img [src]=\\\"places[0].photoURL\\\"></ion-img>\\n            <ion-card-content text-center>\\n              <p>{{places[0].title}}</p>\\n            </ion-card-content>\\n            <div class=\\\"ion-text-end\\\">\\n              <ion-button  color=\\\"primary\\\" fill=\\\"clear\\\" [routerLink]=\\\"[places[0].id]\\\">\\n                More\\n              </ion-button>\\n            </div>\\n          </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" text-center> \\n       <ion-list>\\n         <ion-item *ngFor=\\\"let p of places.slice(1)\\\" [routerLink]=\\\"[p.id]\\\" detail>\\n            <ion-thumbnail slot=\\\"start\\\">\\n              <ion-img [src]=\\\"p.photoURL\\\"></ion-img>\\n            </ion-thumbnail>\\n            <ion-label class=\\\"ion-text-center\\\">\\n              <h2>{{p.description}}</h2>\\n              <p>{{p.price | currency}}/night</p>\\n            </ion-label>\\n         </ion-item>\\n       </ion-list>\\n      </ion-col>\\n    </ion-row>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DiscoverPage } from './discover.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DiscoverPage\n  },\n  {\n    path: 'place-detail',\n    loadChildren: () => import('./place-detail/place-detail.module').then( m => m.PlaceDetailPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DiscoverPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DiscoverPageRoutingModule } from './discover-routing.module';\n\nimport { DiscoverPage } from './discover.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DiscoverPageRoutingModule\n  ],\n  declarations: [DiscoverPage]\n})\nexport class DiscoverPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYWNlcy9kaXNjb3Zlci9kaXNjb3Zlci5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { PlaceService } from '../place.service';\nimport { Place } from '../place.model';\nimport {SegmentChangeEventDetail} from'@ionic/core'\nimport {Subscription} from 'rxjs'\nimport { ThrowStmt } from '@angular/compiler';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { IonSegment } from '@ionic/angular';\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.page.html',\n  styleUrls: ['./discover.page.scss'],\n})\nexport class DiscoverPage implements OnInit,OnDestroy {\n  @ViewChild('segment',{static:true}) segment:IonSegment\n  places:Place[]\n   allPlaces:Place[]\n   isLoading=true\n   placesSubscription:Subscription\n  constructor(private placeService:PlaceService,private authService:AuthService) { }\n  ionViewWillEnter(){\n    if(this.segment.value=='all'){\n      this.places=this.allPlaces\n    }else if(this.segment.value=='bookable'){\n      this.places=this.allPlaces.filter(p=>p.userId!=this.authService.userId)\n    }\n    this.placeService.fetchData().subscribe(()=>{\n      this.isLoading=false\n    })\n  }\n  ngOnInit() {\n    this.placesSubscription=this.placeService.places.subscribe(places=>{\n      this.allPlaces=places\n      this.places=this.allPlaces\n    })\n  }\n  onChange(event:CustomEvent<SegmentChangeEventDetail>){\n    if(event.detail.value=='all'){\n      this.places=this.allPlaces\n    }else if(event.detail.value=='bookable'){\n      this.places=this.allPlaces.filter(p=>p.userId!=this.authService.userId)\n    }\n\n  }\n  ngOnDestroy(): void {\n    if(this.placesSubscription){\n      this.placesSubscription.unsubscribe()\n}     \n  }\n}\n"],"sourceRoot":"webpack:///","file":"discover-discover-module-es5.js"}